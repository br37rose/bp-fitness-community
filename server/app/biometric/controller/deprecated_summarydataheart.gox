package controller

import (
	"context"

	u_d "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/user/datastore"
)

func (impl *BiometricControllerImpl) generateSummaryDataForHR(ctx context.Context, u *u_d.User, res *AggregatePointSummaryResponse) error {
	// // --- Today --- //
	// hrdp, err := impl.DataPointStorer.ListForToday(ctx, []primitive.ObjectID{u.PrimaryHealthTrackingDeviceHeartRateMetricID})
	// if err != nil {
	// 	impl.Logger.Error("failed getting data point list by filter",
	// 		slog.String("metric_id", u.PrimaryHealthTrackingDeviceHeartRateMetricID.Hex()),
	// 		slog.Any("error", err))
	// 	return err
	// }
	// if hrdp != nil {
	// 	res.HeartRateThisDayData = hrdp.Results
	// }
	//
	// // --- Yesterday --- //
	// hrdp, err = impl.DataPointStorer.ListForYesterday(ctx, []primitive.ObjectID{u.PrimaryHealthTrackingDeviceHeartRateMetricID})
	// if err != nil {
	// 	impl.Logger.Error("failed getting data point list by filter",
	// 		slog.String("metric_id", u.PrimaryHealthTrackingDeviceHeartRateMetricID.Hex()),
	// 		slog.Any("error", err))
	// 	return err
	// }
	// if hrdp != nil {
	// 	res.HeartRateLastDayData = hrdp.Results
	// }
	//
	// // --- This ISO Week --- //
	// hrdp, err = impl.DataPointStorer.ListForThisISOWeek(ctx, []primitive.ObjectID{u.PrimaryHealthTrackingDeviceHeartRateMetricID})
	// if err != nil {
	// 	impl.Logger.Error("failed getting data point list by filter",
	// 		slog.String("metric_id", u.PrimaryHealthTrackingDeviceHeartRateMetricID.Hex()),
	// 		slog.Any("error", err))
	// 	return err
	// }
	// if hrdp != nil {
	// 	res.HeartRateThisISOWeekData = hrdp.Results
	// }
	//
	// // --- Last ISO Week --- //
	// hrdp, err = impl.DataPointStorer.ListForLastISOWeek(ctx, []primitive.ObjectID{u.PrimaryHealthTrackingDeviceHeartRateMetricID})
	// if err != nil {
	// 	impl.Logger.Error("failed getting data point list by filter",
	// 		slog.String("metric_id", u.PrimaryHealthTrackingDeviceHeartRateMetricID.Hex()),
	// 		slog.Any("error", err))
	// 	return err
	// }
	// if hrdp != nil {
	// 	res.HeartRateLastISOWeekData = hrdp.Results
	// }
	//
	// // --- This Month Week --- //
	// hrdp, err = impl.DataPointStorer.ListForThisMonth(ctx, []primitive.ObjectID{u.PrimaryHealthTrackingDeviceHeartRateMetricID})
	// if err != nil {
	// 	impl.Logger.Error("failed getting data point list by filter",
	// 		slog.String("metric_id", u.PrimaryHealthTrackingDeviceHeartRateMetricID.Hex()),
	// 		slog.Any("error", err))
	// 	return err
	// }
	// if hrdp != nil {
	// 	res.HeartRateThisMonthData = hrdp.Results
	// }
	//
	// // --- Last Month Week --- //
	// hrdp, err = impl.DataPointStorer.ListForLastMonth(ctx, []primitive.ObjectID{u.PrimaryHealthTrackingDeviceHeartRateMetricID})
	// if err != nil {
	// 	impl.Logger.Error("failed getting data point list by filter",
	// 		slog.String("metric_id", u.PrimaryHealthTrackingDeviceHeartRateMetricID.Hex()),
	// 		slog.Any("error", err))
	// 	return err
	// }
	// if hrdp != nil {
	// 	res.HeartRateLastMonthData = hrdp.Results
	// }

	return nil
}

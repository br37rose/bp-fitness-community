// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/adapter/cache/mongodbcache"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/adapter/cloudprovider/google"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/adapter/emailer/mailgun"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/adapter/openai"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/adapter/paymentprocessor/stripe"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/adapter/storage/s3"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/adapter/templatedemailer"
	controller18 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/aggregatepoint/controller"
	datastore18 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/aggregatepoint/datastore"
	controller7 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/attachment/controller"
	datastore5 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/attachment/datastore"
	controller20 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/biometric/controller"
	controller17 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/datapoint/controller"
	datastore17 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/datapoint/datastore"
	datastore6 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/equipment/datastore"
	datastore13 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/eventlog/datastore"
	controller5 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/exercise/controller"
	datastore7 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/exercise/datastore"
	controller16 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/fitbitapp/controller"
	datastore19 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/fitbitapp/datastore"
	datastore20 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/fitbitdatum/datastore"
	controller13 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/fitnessplan/controller"
	datastore14 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/fitnessplan/datastore"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/gateway/controller"
	controller15 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/googlefitapp/controller"
	datastore16 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/googlefitapp/datastore"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/googlefitapp/httptransport"
	controller12 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/invoice/controller"
	datastore12 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/invoice/datastore"
	controller6 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/member/controller"
	controller14 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/nutritionplan/controller"
	datastore15 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/nutritionplan/datastore"
	controller11 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/offer/controller"
	datastore8 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/offer/datastore"
	controller3 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/organization/controller"
	datastore3 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/organization/datastore"
	stripe2 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/paymentprocessor/controller/stripe"
	controller19 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/rankpoint/controller"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/rankpoint/datastore"
	controller4 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/tag/controller"
	datastore4 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/tag/datastore"
	controller2 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/user/controller"
	datastore2 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/user/datastore"
	controller8 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/videocategory/controller"
	datastore9 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/videocategory/datastore"
	controller9 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/videocollection/controller"
	datastore10 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/videocollection/datastore"
	controller10 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/videocontent/controller"
	datastore11 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/app/videocontent/datastore"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/config"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/crontab"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/aggregatepoint"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/attachment"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/biometric"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/datapoint"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/exercise"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/fitbitapp"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/fitnessplan"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/gateway"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/invoice"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/member"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/middleware"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/nutritionplan"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/offer"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/organization"
	stripe3 "github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/paymentprocessor/stripe"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/rankpoint"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/tag"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/user"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/videocategory"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/videocollection"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/inputport/http/videocontent"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/provider/jwt"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/provider/kmutex"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/provider/logger"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/provider/mongodb"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/provider/password"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/provider/time"
	"github.com/bci-innovation-labs/bp8fitnesscommunity-backend/provider/uuid"
)

import (
	_ "github.com/google/wire"
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

func InitializeEvent() Application {
	slogLogger := logger.NewProvider()
	conf := config.New()
	provider := uuid.NewProvider()
	timeProvider := time.NewProvider()
	jwtProvider := jwt.NewProvider(conf)
	passwordProvider := password.NewProvider()
	client := mongodb.NewProvider(conf, slogLogger)
	cacher := mongodbcache.NewCache(conf, slogLogger, client)
	s3Storager := s3.NewStorage(conf, slogLogger, provider)
	kmutexProvider := kmutex.NewProvider()
	emailer := mailgun.NewEmailer(conf, slogLogger, provider)
	templatedEmailer := templatedemailer.NewTemplatedEmailer(conf, slogLogger, provider, emailer)
	paymentProcessor := stripe.NewPaymentProcessor(conf, slogLogger, provider)
	rankPointStorer := datastore.NewDatastore(conf, slogLogger, client)
	userStorer := datastore2.NewDatastore(conf, slogLogger, client)
	organizationStorer := datastore3.NewDatastore(conf, slogLogger, client)
	gatewayController := controller.NewController(conf, slogLogger, provider, jwtProvider, passwordProvider, cacher, s3Storager, client, kmutexProvider, templatedEmailer, paymentProcessor, rankPointStorer, userStorer, organizationStorer)
	middlewareMiddleware := middleware.NewMiddleware(conf, slogLogger, provider, timeProvider, jwtProvider, gatewayController)
	handler := gateway.NewHandler(slogLogger, gatewayController)
	userController := controller2.NewController(conf, slogLogger, provider, client, passwordProvider, userStorer)
	userHandler := user.NewHandler(slogLogger, userController)
	organizationController := controller3.NewController(conf, slogLogger, provider, passwordProvider, s3Storager, client, templatedEmailer, organizationStorer, userStorer)
	organizationHandler := organization.NewHandler(slogLogger, organizationController)
	tagStorer := datastore4.NewDatastore(conf, slogLogger, client)
	tagController := controller4.NewController(conf, slogLogger, provider, s3Storager, passwordProvider, kmutexProvider, client, templatedEmailer, userStorer, tagStorer)
	tagHandler := tag.NewHandler(slogLogger, tagController)
	attachmentStorer := datastore5.NewDatastore(conf, slogLogger, client)
	equipmentStorer := datastore6.NewDatastore(conf, slogLogger, client)
	exerciseStorer := datastore7.NewDatastore(conf, slogLogger, client)
	offerStorer := datastore8.NewDatastore(conf, slogLogger, client)
	exerciseController := controller5.NewController(conf, slogLogger, provider, kmutexProvider, s3Storager, client, attachmentStorer, equipmentStorer, exerciseStorer, offerStorer, userStorer)
	exerciseHandler := exercise.NewHandler(slogLogger, exerciseController)
	memberController := controller6.NewController(conf, slogLogger, provider, s3Storager, passwordProvider, paymentProcessor, client, organizationStorer, rankPointStorer, userStorer)
	memberHandler := member.NewHandler(slogLogger, memberController)
	attachmentController := controller7.NewController(conf, slogLogger, provider, s3Storager, client, emailer, attachmentStorer, exerciseStorer, userStorer)
	attachmentHandler := attachment.NewHandler(attachmentController)
	videoCategoryStorer := datastore9.NewDatastore(conf, slogLogger, client)
	videoCategoryController := controller8.NewController(conf, slogLogger, provider, s3Storager, emailer, client, videoCategoryStorer, exerciseStorer, userStorer)
	videocategoryHandler := videocategory.NewHandler(slogLogger, videoCategoryController)
	videoCollectionStorer := datastore10.NewDatastore(conf, slogLogger, client)
	videoCollectionController := controller9.NewController(conf, slogLogger, provider, kmutexProvider, s3Storager, client, attachmentStorer, videoCategoryStorer, videoCollectionStorer)
	videocollectionHandler := videocollection.NewHandler(slogLogger, videoCollectionController)
	videoContentStorer := datastore11.NewDatastore(conf, slogLogger, client)
	videoContentController := controller10.NewController(conf, slogLogger, provider, kmutexProvider, s3Storager, attachmentStorer, client, videoCategoryStorer, videoCollectionStorer, videoContentStorer, offerStorer, userStorer)
	videocontentHandler := videocontent.NewHandler(slogLogger, videoContentController)
	offerontroller := controller11.NewController(conf, slogLogger, provider, client, organizationStorer, offerStorer, userStorer, exerciseStorer, videoContentStorer)
	offerHandler := offer.NewHandler(slogLogger, offerontroller)
	invoiceStorer := datastore12.NewDatastore(conf, slogLogger, client)
	invoiceController := controller12.NewController(conf, slogLogger, provider, client, organizationStorer, invoiceStorer)
	invoiceHandler := invoice.NewHandler(slogLogger, invoiceController)
	eventLogStorer := datastore13.NewDatastore(conf, slogLogger, client)
	stripePaymentProcessorController := stripe2.NewController(conf, slogLogger, provider, s3Storager, passwordProvider, emailer, templatedEmailer, paymentProcessor, organizationStorer, userStorer, invoiceStorer, offerStorer, eventLogStorer)
	stripeHandler := stripe3.NewHandler(slogLogger, stripePaymentProcessorController)
	openAIConnector := openai.NewOpenAIConnector(conf, slogLogger, client)
	fitnessPlanStorer := datastore14.NewDatastore(conf, slogLogger, client)
	fitnessPlanController := controller13.NewController(conf, slogLogger, provider, s3Storager, emailer, client, kmutexProvider, openAIConnector, fitnessPlanStorer, exerciseStorer, userStorer)
	fitnessplanHandler := fitnessplan.NewHandler(slogLogger, fitnessPlanController)
	nutritionPlanStorer := datastore15.NewDatastore(conf, slogLogger, client)
	nutritionPlanController := controller14.NewController(conf, slogLogger, provider, s3Storager, emailer, client, kmutexProvider, openAIConnector, nutritionPlanStorer, exerciseStorer, userStorer)
	nutritionplanHandler := nutritionplan.NewHandler(slogLogger, nutritionPlanController)
	googleCloudPlatformAdapter := google.NewAdapter(conf, slogLogger, client)
	googleFitAppStorer := datastore16.NewDatastore(conf, slogLogger, client)
	dataPointStorer := datastore17.NewDatastore(conf, slogLogger, client)
	aggregatePointStorer := datastore18.NewDatastore(conf, slogLogger, client)
	googleFitAppController := controller15.NewController(conf, slogLogger, provider, client, cacher, kmutexProvider, googleCloudPlatformAdapter, organizationStorer, googleFitAppStorer, userStorer, dataPointStorer, aggregatePointStorer)
	httptransportHandler := httptransport.NewHandler(slogLogger, googleFitAppController)
	fitBitAppStorer := datastore19.NewDatastore(conf, slogLogger, client)
	fitBitDatumStorer := datastore20.NewDatastore(conf, slogLogger, client)
	fitBitAppController := controller16.NewController(conf, slogLogger, provider, client, cacher, kmutexProvider, organizationStorer, fitBitAppStorer, userStorer, fitBitDatumStorer, dataPointStorer, aggregatePointStorer)
	fitbitappHandler := fitbitapp.NewHandler(slogLogger, fitBitAppController)
	dataPointController := controller17.NewController(conf, slogLogger, provider, client, cacher, kmutexProvider, organizationStorer, fitBitAppStorer, userStorer, fitBitDatumStorer, dataPointStorer)
	datapointHandler := datapoint.NewHandler(slogLogger, dataPointController)
	aggregatePointController := controller18.NewController(conf, slogLogger, provider, client, cacher, kmutexProvider, organizationStorer, fitBitAppStorer, userStorer, fitBitDatumStorer, dataPointStorer, aggregatePointStorer)
	aggregatepointHandler := aggregatepoint.NewHandler(slogLogger, aggregatePointController)
	rankPointController := controller19.NewController(conf, slogLogger, provider, client, cacher, kmutexProvider, s3Storager, organizationStorer, fitBitAppStorer, userStorer, fitBitDatumStorer, dataPointStorer, aggregatePointStorer, rankPointStorer)
	rankpointHandler := rankpoint.NewHandler(slogLogger, rankPointController)
	biometricController := controller20.NewController(conf, slogLogger, provider, client, cacher, kmutexProvider, s3Storager, organizationStorer, fitBitAppStorer, userStorer, fitBitDatumStorer, dataPointStorer, aggregatePointStorer, rankPointStorer)
	biometricHandler := biometric.NewHandler(slogLogger, biometricController)
	inputPortServer := http.NewInputPort(conf, slogLogger, middlewareMiddleware, handler, userHandler, organizationHandler, tagHandler, exerciseHandler, memberHandler, attachmentHandler, videocategoryHandler, videocollectionHandler, videocontentHandler, offerHandler, invoiceHandler, stripeHandler, fitnessplanHandler, nutritionplanHandler, httptransportHandler, fitbitappHandler, datapointHandler, aggregatepointHandler, rankpointHandler, biometricHandler)
	crontabInputPortServer := crontab.NewInputPort(conf, slogLogger, userController, fitBitAppController, aggregatePointController, rankPointController)
	application := NewApplication(slogLogger, inputPortServer, crontabInputPortServer)
	return application
}
